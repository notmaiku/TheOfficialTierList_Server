//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.0

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "tiers")]
pub struct Model {
    #[sea_orm(primary_key)]
    pub id: i32,
    #[sea_orm(column_type = "Text")]
    pub title: String,
    #[sea_orm(column_type = "Text", nullable)]
    pub image: Option<String>,
    pub tier: String,
    pub kind: Option<String>,
    pub updated_at: Option<DateTime>,
    pub deleted_at: Option<DateTime>,
    pub game: String,
    pub x: Option<i32>,
    pub user_id: Option<String>,
    pub list_id: Option<String>,
    pub role: Option<String>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
       #[sea_orm(has_one = "super::lists::Entity")]
    Lists,
}

impl Related<super::lists::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Lists.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
